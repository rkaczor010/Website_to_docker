- name: Create ports mapping list
  set_fact:
    webservice_ports_mappings: "{{ webservice_ports | map('regex_replace', '(\\d+)', '\\1:\\1') | list }}"

- name: debug
  debug:
    msg: "{{ webservice_ports_mappings }}"


- name: Pull {{ ubuntu_container_image }} image
  containers.podman.podman_image:
    name: "{{ ubuntu_container_image }}"

- name: Create a container from the "{{ ubuntu_container_image }}" image
  containers.podman.podman_container:
    name: "{{ tmp_container_name }}"
    image: "{{ ubuntu_container_image }}"
    state: started
    detach: true
    interactive: true
    tty: true   

- name: Install updates and apache2 package inside the container
  containers.podman.podman_container_exec:
    name: "{{ tmp_container_name }}"
    argv: 
      - /bin/bash
    command: "{{ item }}"
  loop:
    - apt-get update -y
    - apt-get upgrade -y
    - apt-get install -y apache2

- name: Commit the modified container to a new image
  command:
    cmd: podman commit {{ tmp_container_name }} {{ custom_apache2_container_image }}

- name: Stop the container
  containers.podman.podman_container:
    name: "{{ tmp_container_name }}"
    state: stopped

- name: Remove the container
  containers.podman.podman_container:
    name: "{{ tmp_container_name }}"
    state: absent

- name: Remove {{ ubuntu_container_image }} image
  containers.podman.podman_image:
    name: "{{ ubuntu_container_image }}"

- name: Run rootless apache2 container as {{ rootless_user }} user
  containers.podman.podman_container:
    name: "{{ apache2_container_name }}"
    image: "{{ custom_apache2_container_image }}"
    state: started
    restart_policy: always
    ports: "{{ webservice_ports_mappings }}"
    volumes:
      - "/etc/apache2:/etc/apache2/"
      - "/var/www:/var/www" 

