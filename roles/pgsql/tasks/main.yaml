- name: Create directory for postgres user
  file:
    path: "{{ pgsql_user_workdir }}/"
    mode: 0700
    owner: "{{ pgsql_host_user }}"
    group: "{{ pgsql_host_user }}"
    state: directory
  become: true

- name: Create a backup of the PostgreSQL database
  command: 
    cmd: su - postgres -c 'pg_dumpall > {{ pgsql_backup_path }}'
  register: pg_backup_result 
  failed_when: pg_backup_result.rc != 0
  become: true

- name: Create Dockerfile from template
  template:
    src: templates/Dockerfile_postgres.j2
    dest: "{{ pgsql_user_workdir }}/Dockerfile"
    mode: '0700'

- name: Build container image
  command: 
    cmd: podman build -t {{ pgsql_custom_image }} .
    chdir: "{{ pgsql_user_workdir }}"

- name: Stop postgresql service on host os
  systemd:
    name: postgresql
    state: stopped
    enabled: false

- name: Run postgresql container in userns
  containers.podman.podman_container:
    name: "{{ pgsql_container_name }}"
    image: "{{ pgsql_custom_image }}"
    state: started
    restart_policy: always
    ports: "{{ pgsql_host_port }}:{{ pgsql_host_port }}"
    detach: true
    interactive: true
    tty: true
    userns: auto


